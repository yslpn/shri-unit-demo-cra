name: Release process
on:
  push:
    tags:
      - "v*"
jobs:
  issue:
    runs-on: ubuntu-latest
    outputs:
      issue_number: ${{ steps.create_issue.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install auto-changelog
        run: npm i -g auto-changelog
      - name: Generate changelog
        run: auto-changelog --commit-limit false --template keepachangelog
      - name: Create Issue
        id: create_issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const description = fs.readFileSync('CHANGELOG.md', 'utf8');
            const [owner, repo] = '${{ github.repository }}'.split('/');
            const version = '${{ github.ref_name }}';
            const title = `Release ${version} by ${{ github.actor }}`;
            const issue = { owner, repo, labels: ['RELEASE'] };
            const issues = await github.rest.issues.listForRepo({ ...issue, state: 'all' });
            const existingIssue = issues.data.find(i => i.title === title);

            if (existingIssue) {
              const update = { ...issue, issue_number: existingIssue.number, body: description, state: 'open' };
              await github.rest.issues.update(update);
              return existingIssue.number;
            } else {
              const create = { ...issue, title: title, body: description };
              const response = await github.rest.issues.create(create);
              return response.data.number;
            }
  pr:
    runs-on: ubuntu-latest
    needs: issue
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      - name: Git checkout
        run: |
          git checkout -b release-${{ github.ref_name }}
      - name: Push the branch
        run: git push origin release-${{ github.ref_name }}
      - name: Create or Update Pull Request
        id: create_or_update_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const [owner, repo] = '${{ github.repository }}'.split('/');
            const base = 'stable';
            const head = 'release-${{ github.ref_name }}';
            const issue_number = ${{ needs.issue.outputs.issue_number }};
            const prBody = 'This is a pull request for release. Closes #' + issue_number;
            const title = `Release ${head} by ${{ github.actor }}`;
            const pr = { owner, repo, base, head, body: prBody, title };

            const pulls = await github.rest.pulls.list({ owner, repo, state: 'open', head: `${owner}:${head}` });
            const existingPr = pulls.data.find(p => p.title === title);

            if (existingPr) {
              const update = { owner, repo, pull_number: existingPr.number, body: prBody };
              await github.rest.pulls.update(update);
            } else {
              await github.rest.pulls.create({ ...pr });
            }
  # unit-tests:
  #   runs-on: ubuntu-latest
  #   needs: pr
  #   steps:
  #     - uses: actions/labeler@v4
  # e2e-tests:
  #   runs-on: ubuntu-latest
  #   needs: pr
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Install Playwright Browsers
  #       run: npx playwright install --with-deps
  #     - name: Run Playwright tests
  #       run: npm run e2e
  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30
  # codelint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Lint all files
  #       run: npm run lint
